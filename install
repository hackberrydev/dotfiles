#!/usr/bin/env bash
set -e

here="$(dirname "$0")"
here="$(cd "$here"; pwd)"

mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}

echo "Installing submodules"
git submodule init
git submodule update

echo "Download package lists"
sudo apt-get update -q -y 2>&1 >/dev/null

echo "Install basic tools"
sudo apt-get install -y git make zsh tmux ack-grep exuberant-ctags tree 2>&1 >/dev/null

echo "Install Neovim"
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:neovim-ppa/unstable
sudo apt-get update
sudo apt-get install neovim

echo "Use Neovim instead of vi and Vim"
sudo update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60
sudo update-alternatives --config vi
sudo update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60
sudo update-alternatives --config vim
sudo update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60
sudo update-alternatives --config editor

if [[ ! -d ~/.oh-my-zsh ]]; then
  echo "Install oh-my-zsh"
  git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
fi

if [[ $SHELL != "/bin/zsh" ]]; then
  echo "Switch to zsh"
  chsh -s $(which zsh)
fi

echo "Link dotfiles"
for file in "$here"/*; do
name="$(basename "$file" .md)"
  [[ $name = bin ]] && dotname="$name" || dotname=".${name}"

  if [[ !( "install README" =~ $name || -e ~/$dotname || -d $file/.git ) ]]; then
    ln -sfv ${file#$HOME/} "${HOME}/${dotname}"
  fi
done

if [[ ! -d ~/.config/nvim ]]; then
  echo "Install neovimfiles"
  ssh-keyscan github.com >> ~/.ssh/known_hosts
  git clone git@github.com:strika/neovimfiles.git ~/.config/nvim
  cd ~/.config/nvim && install
fi
